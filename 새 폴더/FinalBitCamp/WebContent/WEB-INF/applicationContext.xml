<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">


<context:component-scan base-package="service"/>

<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource">
	<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
	<property name="url" value="jdbc:mysql://localhost:3306/final"></property>
	<property name="username" value="root"></property>
	<property name="password" value="mysql"></property>
	<property name="maxActive" value="8"></property>
	<property name="maxIdle" value="8"></property>
	<property name="minIdle" value="0"></property>
	<property name="initialSize" value="0"></property>
</bean>

<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	<property name="host" value="smtp.gmail.com" />
    <property name="port" value="587" />
    <property name="username" value="horsejang@gmail.com" />
    <property name="password" value="#54horse" />
    <property name="javaMailProperties">
        <props>
            <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
            <prop key="mail.smtp.starttls.enable">true</prop>
            <prop key="mail.smtp.auth">true</prop>
        </props>
    </property>
</bean>


<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
	<property name="dataSource" ref="dataSource"></property>
	<property name="typeAliasesPackage" value="model"></property>
	<property name="mapperLocations" value="classpath:dao/mapper/*.xml"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="MemberDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.MemberDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="BookingDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.BookingDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="BookedSiteDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.BookedSiteDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="leaveMemberDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.LeaveMemberDao"></property>
</bean>


<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="mileageDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.MileageDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="myCampDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.MyCampDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="sellerDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.SellerDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="pictureDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.PictureDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="sellerRequestDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.SellerRequestDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="campDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.CampDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="siteDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.SiteDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="facilityDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.FacilityDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="boardOneDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.BoardOneDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="boardTwoDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.BoardTwoDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="boardTwoReDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.BoardTwoReDao"></property>
</bean>

<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="campReviewDao">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	<property name="mapperInterface" value="dao.CampReviewDao"></property>
</bean>

<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<property name="dataSource" ref="dataSource"/>
</bean>

<tx:advice transaction-manager="txManager" id="mytx">
<tx:attributes>
<tx:method name="*"/>
</tx:attributes>
</tx:advice>

<aop:config>
<aop:advisor advice-ref="mytx"
pointcut="execution(public * service .*service.*(..))"/>
</aop:config>


</beans>
